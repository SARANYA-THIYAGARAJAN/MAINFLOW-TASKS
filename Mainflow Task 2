MAIN FLOW SERVICES AND TECHNOLOGIES
DATA ANALYSIS WITH SQL DEVELOPER TASK2
															#2nd Class TASK
create table courses(CourseID int auto_increment primary key,CourseName varchar(50));
create table enrollments(enrollmentID int auto_increment primary key,studentID int,courseID int,
enrollmentDate date,foreign key(studentID)references students(studentID),
foreign key(courseID) references courses(courseID));

### values inserting into courses table
insert into courses(CourseName) values('Math'),('Science'),('English'),('History');
### values inserting into enrollments table
insert into enrollments(studentID,courseID,enrollmentDate)
values(1,1,'2024-08-16'),(2,2,'2024-08-17'),(3,1,'2024-08-18'),(4,2,'2024-08-20'),
(3,3,'2024-08-19'),(4,4,'2024-09-15'),(6,4,'2024-09-17'),(6,3,'2024-09-20'),(7,1,'2024-08-28'),(8,2,'2024-08-30'),(10,1,'2024-09-12'),(3,4,'2024-11-27');

#Task 1: List all students and the courses they are enrolled in.

SELECT X.NAME,Y.COURSENAME FROM enrollments Z JOIN students X ON Z.STUDENTID=X.STUDENTID JOIN COURSES Y ON Z.courseID=Y.COURSEID;
#Task 2: Find the number of students enrolled in each course.

SELECT Y.COURSENAME,COUNT(Z.studentID) AS NUMBER_OF_STUDENTS_ENROLLED FROM enrollments Z LEFT JOIN COURSES Y ON Y.COURSEID=Z.COURSEID GROUP BY Y.COURSENAME;
#Task 3: List students who have enrolled in more than one course.

SELECT X.NAME,COUNT(Z.STUDENTID) AS NO_OF_COURSES_ENROLLED FROM enrollments Z  LEFT JOIN students X ON X.STUDENTID=Z.STUDENTID  group by X.Name HAVING COUNT(Z.studentID)>1;

#Task 4: Find courses with no enrolled students.

SELECT Y.COURSENAME FROM COURSES Y LEFT JOIN  ENROLLMENTS Z ON Y.COURSEID=Z.COURSEID WHERE Z.ENROLLMENTID IS NULL;#(NO ONE)
SELECT X.NAME FROM students X LEFT JOIN ENROLLMENTS Z ON X.STUDENTID=Z.STUDENTID WHERE Z.ENROLLMENTID IS NULL
